AWSTemplateFormatVersion: "2010-09-09"
Description: ETL Job to process energy related files

Parameters:
  AWSAccountID:
    Type: String
    Description: The AWS account ID
    Default: "030334431257"
# TODO: CREATE A ROLE CALLED energy-glue-s3 AND REPLACE IT WITH amaris-glue-s3
Resources:
  # GLUE JOB
  EnergyETLJob:
    Type: AWS::Glue::Job
    Properties:
      # AWS Glue Job Configuration for energy-etl
      Name: energy-etl
      Description: "ETL process to transform three csv files into one parquet file"
      Role: !Sub "arn:aws:iam::${AWSAccountID}:role/amaris-glue-s3"
      Command:
        Name: glueetl
        ScriptLocation: !Sub "s3://aws-glue-assets-${AWSAccountID}-us-east-1/scripts/energy-etl.py"
        PythonVersion: "3"
      DefaultArguments:
        "--enable-metrics": "true"
        "--enable-spark-ui": "true"
        "--enable-job-insights": "true"
        "--enable-observability-metrics": "true"
        "--enable-glue-datacatalog": "true"
        "--job-bookmark-option": "job-bookmark-disable"
        "--job-language": "python"
        "--TempDir": !Sub "s3://aws-glue-assets-${AWSAccountID}-us-east-1/temporary/"
        "--spark-event-logs-path": !Sub "s3://aws-glue-assets-${AWSAccountID}-us-east-1/sparkHistoryLogs/"
      MaxRetries: 0
      Timeout: 480
      GlueVersion: "5.0"
      MaxCapacity: 2.0
      WorkerType: G.1X
      NumberOfWorkers: 2
      ExecutionClass: STANDARD

  # CRAWLERS
  CrawlerEnergy:
    Type: AWS::Glue::Crawler
    Properties:
      Name: crawler-energy
      Description: "Crawler with the role of identifying all raw files used in the energy test"
      Role: amaris-glue-s3
      DatabaseName: energy-db
      Targets:
        S3Targets:
          - Path: "s3://dl-energy/energy_sales/raw/"
            Exclusions: []
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: DEPRECATE_IN_DATABASE
      RecrawlPolicy:
        RecrawlBehavior: CRAWL_EVERYTHING
      Configuration: '{"LakeFormationConfiguration": {"UseLakeFormationCredentials": false}, "LineageConfiguration": "DISABLED", "CreatePartitionIndex": false}'
  
  CrawlerParquetsEnergy:
    Type: AWS::Glue::Crawler
    Properties:
      Name: crawler-parquets-energy
      Description: "Read parquet files created by energy ETL"
      Role: amaris-glue-s3
      DatabaseName: energy-db
      Targets:
        S3Targets:
          - Path: "s3://dl-energy/energy_sales/parquets/industrial/"
          - Path: "s3://dl-energy/energy_sales/parquets/residential/"
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: DEPRECATE_IN_DATABASE
      RecrawlPolicy:
        RecrawlBehavior: CRAWL_EVERYTHING
      Configuration: '{"LakeFormationConfiguration": {"UseLakeFormationCredentials": false}, "LineageConfiguration": "DISABLED", "CreatePartitionIndex": true}'
  
  # REQUIRED PERMISSIONS
  IAMRoleEnergyglues3:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::IAM::Role"
    DeletionPolicy: "Retain"
    Properties:
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
      MaxSessionDuration: 3600
      RoleName: "amaris-glue-s3"
      Description: "Allows Glue to call AWS services on your behalf. "
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRole"
          Effect: "Allow"
          Principal:
            Service: "glue.amazonaws.com"